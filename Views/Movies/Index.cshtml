@model IEnumerable<MVC_FinalProject.Models.Movie>
@*This @model directive allows you to access the list of movies that
  the controller passed to the view by using a Model object that's strongly typed.*@

@{
    ViewBag.Title = "MovieIndex";
}

<h2>Movie List</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
    @* to add the search information to the URL and that it should be routed to the HttpGet version of the Index method.*@
    @using (Html.BeginForm("Index", "Movies", FormMethod.Get)) {
        
    <p>
        Genre: @Html.DropDownList("movieGenre", "All")
        Title: @Html.TextBox("SearchString") <br />
        <input type="submit" value="Filter" /> @*a filter button*@
    </p>
    }


<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ReleaseDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Genre)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        @*new field added*@
        <th>
            @Html.DisplayNameFor(model => model.Rating)
        </th>

        <th></th>
    </tr>

  @*  The code loops through the movies by doing a foreach statement over the strongly typed Model object:*@

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ReleaseDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Genre)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        @*new field added*@
        <td>
            @Html.DisplayFor(modelItem => item.Rating)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}

</table>


